<h1 id="how-it-works">How It Works</h1>

<h2 id="registration">Registration</h2>

<p>To start using Blockchain Web Services go to <a href="https://bws.ninja">bws.ninja</a> and sign-up. It&rsquo;s free.</p>

<h2 id="api-endpoint">API Endpoint</h2>
<pre class="highlight javascript"><code><span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
    <span class="na">method</span><span class="p">:</span> <span class="s1">'POST'</span><span class="p">,</span>
    <span class="na">url</span><span class="p">:</span> <span class="s1">'https://api.bws.ninja/v1/call'</span><span class="p">,</span>
   <span class="p">...</span>
  <span class="p">});</span>
</code></pre>
<p>Blockchain Web Services API baseline endpoint is <strong>api.bws.ninja</strong> and current version is <strong>v1</strong>.</p>

<p>As an example, API operation <strong>call</strong> will use the following URL: </p>

<p><code class="prettyprint">https://api.bws.ninja/v1/call</code>.</p>

<h2 id="authentication">Authentication</h2>
<pre class="highlight javascript"><code><span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
    <span class="p">...</span>
    <span class="na">headers</span><span class="p">:</span> <span class="p">{</span>
      <span class="s1">'Content-Type'</span><span class="p">:</span> <span class="s1">'application/json'</span><span class="p">,</span>
      <span class="s1">'X-Api-Key'</span><span class="p">:</span> <span class="s1">'my-api-key'</span>
    <span class="p">},</span>
    <span class="p">...</span>
  <span class="p">});</span>
</code></pre>
<p>Calling <a href="https://bws.ninja">Blockchain Web Services</a> smart contracts requires a personal <strong>API Key</strong> to authenticate. To get your key, sign in at <a href="https://bws.ninja">bws.ninja</a> and go to <code class="prettyprint">My Account &gt; API Key</code>. </p>

<p>All of your API calls must contain the following header attribute: </p>

<p><code class="prettyprint">&#39;X-Api-Key&#39;: &#39;&lt;my-api-key&gt;&#39;</code></p>

<p><br/>
<img src="/images/APIKey.png" alt="BWS Credits" /></p>

<h2 id="api-calls-response">API Calls Response</h2>

<blockquote>
<p>API success call response example</p>
</blockquote>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">200</span><span class="p">,</span><span class="w">
  </span><span class="s2">"info"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="s2">"jobId"</span><span class="p">:</span><span class="w"> </span><span class="s2">"543433243"</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<blockquote>
<p>API call error response example</p>
</blockquote>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">404</span><span class="p">,</span><span class="w">
  </span><span class="s2">"statusMessage"</span><span class="p">:</span><span class="w"> </span><span class="s2">"incorrect parameters"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>When calling the API, you can get an <a href="https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol">HTTP</a> layer <a href="https://en.wikipedia.org/wiki/List_of_HTTP_status_codes">transport error</a>, that is, an error that has ocurried before the related API code is executed (e.g. 503, Service Unavailable), or a <em>controlled error</em>, meaning an error that is related to the parameters values you send (e.g. 404, not found - when no data is found for your query).</p>

<p>When no transport layer error is detected, all the API calls will include the next message in the BODY part of the response:</p>

<table><thead>
<tr>
<th>Parameter</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>statusCode</td>
<td>number</td>
<td>The api call result code (e.g. 200 indicates no error).</td>
</tr>
<tr>
<td>statusMessage</td>
<td>string</td>
<td>The status code related message.</td>
</tr>
<tr>
<td>info</td>
<td>object</td>
<td>The requested information</td>
</tr>
</tbody></table>

<h3 id="error-status-codes">Error Status Codes</h3>

<p>The Blockchain Web Services API uses the following error Status Codes:</p>

<table><thead>
<tr>
<th>Status Code</th>
<th>Meaning</th>
</tr>
</thead><tbody>
<tr>
<td>400</td>
<td>Bad Request &ndash; Check your request parameters.</td>
</tr>
<tr>
<td>401</td>
<td>Unauthorized &ndash; Check your API key</td>
</tr>
<tr>
<td>403</td>
<td>Forbidden / Too Many Requests &ndash; Slow down!</td>
</tr>
<tr>
<td>404</td>
<td>Not Found &ndash; Your API key is valid but there is no related user on our servers.</td>
</tr>
<tr>
<td>405</td>
<td>Method Not Allowed &ndash; You tried to access with an invalid method</td>
</tr>
<tr>
<td>406</td>
<td>Not Acceptable &ndash; You requested a format that isn&rsquo;t json</td>
</tr>
<tr>
<td>410</td>
<td>Gone &ndash; The requested object has been removed</td>
</tr>
<tr>
<td>418</td>
<td>I&rsquo;m a teapot</td>
</tr>
<tr>
<td>429</td>
<td>Too Many Requests &ndash; Slow down!</td>
</tr>
<tr>
<td>500</td>
<td>Internal Server Error &ndash; We had a problem with our server. Try again later.</td>
</tr>
<tr>
<td>503</td>
<td>Service Unavailable &ndash; We&rsquo;re temporarially offline for maintanance. Please try again later.</td>
</tr>
</tbody></table>

<h1 id="api-methods">API Methods</h1>

<p>Use <a href="#call-operation">‘call’</a> to run a Smart Contract operation and <a href="#fetch-operation">&lsquo;fetch’</a> to get Smart Contract call status (Smart Contracts execution can take a while to get confirmed from the Blockchain).</p>

<p>&ldquo;<em>A smart contract is a computer program or a transaction protocol which is intended to automatically execute, control or document legally relevant events and actions according to the terms of a contract or an agreement.</em>&rdquo; The <a href="https://en.wikipedia.org/wiki/Smart_contract">Wikipedia</a>.</p>

<p><a name="call-operation"></a></p>

<h2 id="call">&#39;call&rsquo;</h2>

<blockquote>
<p>API call example.</p>
</blockquote>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">parameters</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s2">"contractId"</span><span class="p">:</span> <span class="s2">"Ethereum.Database.Immutable"</span><span class="p">,</span>
  <span class="s2">"parameters"</span><span class="p">:</span> <span class="p">{</span>
    <span class="p">...</span>
  <span class="p">}</span>
<span class="p">};</span>

<span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
  <span class="na">method</span><span class="p">:</span> <span class="s1">'POST'</span><span class="p">,</span>
  <span class="na">url</span><span class="p">:</span> <span class="s1">'https://api.bws.ninja/v1/call'</span><span class="p">,</span>
  <span class="na">dataType</span><span class="p">:</span> <span class="s1">'json'</span><span class="p">,</span>
  <span class="na">data</span><span class="p">:</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">parameters</span><span class="p">),</span>
  <span class="na">headers</span><span class="p">:</span> <span class="p">{</span>
    <span class="s1">'Content-Type'</span><span class="p">:</span> <span class="s1">'application/json'</span><span class="p">,</span>
    <span class="s1">'X-Api-Key'</span><span class="p">:</span> <span class="s1">'ExV0d92KzQ8QgsTVnevddpbB8cUaAfPs7ntVF8g0'</span>
  <span class="p">},</span>
  <span class="p">...</span>
  <span class="p">});</span>

</code></pre>
<blockquote>
<p>API call response example</p>
</blockquote>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">200</span><span class="p">,</span><span class="w">
  </span><span class="s2">"info"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="s2">"jobId"</span><span class="p">:</span><span class="w"> </span><span class="s2">"543433243"</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p><code class="prettyprint">https://api.bws.ninja/v1/call</code> runs a <a href="https://bws.ninja">Blockchain Web Services</a> Smart Contract and must contain the following parameters:</p>

<table><thead>
<tr>
<th>Parameter</th>
<th>Type</th>
<th>Value(s)</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>contract</td>
<td>string</td>
<td>check <a href="#smart-contracts">Smart Contracts</a></td>
<td>The contract id.</td>
</tr>
<tr>
<td>version</td>
<td>number</td>
<td>1,2,3,&hellip;</td>
<td>The contract version to use.</td>
</tr>
<tr>
<td>network</td>
<td>string</td>
<td>sepolia, ethereum</td>
<td>The network id to save data to.</td>
</tr>
<tr>
<td>operation</td>
<td>string</td>
<td>check <a href="#smart-contracts">Smart Contracts</a></td>
<td>The operation id to call.</td>
</tr>
<tr>
<td>parameters</td>
<td>json</td>
<td>check <a href="#smart-contracts">Smart Contracts</a></td>
<td>The operation required parameters.</td>
</tr>
</tbody></table>

<p>Please note:</p>

<ul>
<li><p>The <code class="prettyprint">contract</code>, <code class="prettyprint">operation</code> and <code class="prettyprint">parameters</code> attributes are used to call any of the Blockchain Web Services available <a href="#smart-contracts">Smart Contracts</a>.</p></li>
<li><p><code class="prettyprint">version</code> is used to call a specific Smart Contract implementation.</p></li>
<li><p><code class="prettyprint">network</code> is the network you want to use (e.g. <code class="prettyprint">sepolia</code> network can be used to test without requiring any funds).</p></li>
<li><p>Method parameters must be passed in the Body part of the POST request message using <a href="https://en.wikipedia.org/wiki/JSON">JSON</a> format (<code class="prettyprint">Content-Type</code> header attribute must be set to <code class="prettyprint">application/json</code>)</p></li>
</ul>

<h3 id="call-response">&lsquo;call&rsquo; Response</h3>

<p>API call response includes the &lsquo;jobId&rsquo; to use to get Smart Contract results.</p>

<p><code class="prettyprint">{ &quot;jobId&quot;: &quot;aacee908-3a85-4966-945c-ab8f09ebabf9&quot; }</code></p>

<p>Check the <a href="#api-calls-response">response</a> object you get when calling Blockchain Web Services API.</p>

<p><a name="fetch-operation"></a></p>

<h2 id="fetch">&lsquo;fetch&rsquo;</h2>

<blockquote>
<p>API call example.</p>
</blockquote>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">parameters</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s2">"jobId"</span><span class="p">:</span> <span class="s2">"b064cc6b-f394-4ca4-9c51-be506e4cc59d"</span><span class="p">,</span>
<span class="p">};</span>

<span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
  <span class="na">method</span><span class="p">:</span> <span class="s1">'POST'</span><span class="p">,</span>
  <span class="na">url</span><span class="p">:</span> <span class="s1">'https://api.bws.ninja/v1/fetch'</span><span class="p">,</span>
  <span class="na">dataType</span><span class="p">:</span> <span class="s1">'json'</span><span class="p">,</span>
  <span class="na">data</span><span class="p">:</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">parameters</span><span class="p">),</span>
  <span class="na">headers</span><span class="p">:</span> <span class="p">{</span>
    <span class="s1">'Content-Type'</span><span class="p">:</span> <span class="s1">'application/json'</span><span class="p">,</span>
    <span class="s1">'X-Api-Key'</span><span class="p">:</span> <span class="s1">'ExV0d92KzQ8QgsTVnevddpbB8cUaAfPs7ntVF8g0'</span>
  <span class="p">},</span>
  <span class="p">...</span>
  <span class="p">});</span>

</code></pre>
<blockquote>
<p>Fetch API call response example</p>
</blockquote>
<pre class="highlight json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"statusCode"</span><span class="p">:</span><span class="w"> </span><span class="mi">200</span><span class="p">,</span><span class="w">
    </span><span class="s2">"statusMessage"</span><span class="p">:</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
    </span><span class="s2">"info"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"Status"</span><span class="p">:{</span><span class="w"> </span><span class="s2">"Value"</span><span class="p">:</span><span class="s2">"registered"</span><span class="p">},</span><span class="w">
        </span><span class="s2">"TimestampInMillis"</span><span class="p">:</span><span class="mi">1674504952</span><span class="p">,</span><span class="w">
        </span><span class="s2">"Request"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="s2">"contract"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Ethereum.Database.Immutable "</span><span class="p">,</span><span class="w">
            </span><span class="s2">"version"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
            </span><span class="s2">"network"</span><span class="p">:</span><span class="w"> </span><span class="s2">"sepolia"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"operation"</span><span class="p">:</span><span class="w"> </span><span class="s2">"insertBytes32"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"parameters"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="s2">"key"</span><span class="p">:</span><span class="w"> </span><span class="s2">"a-key"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"value"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Hello World!"</span><span class="w">
            </span><span class="p">},</span><span class="w">
            </span><span class="s2">"Guid"</span><span class="p">:</span><span class="s2">"b064cc6b-f394-4ca4-9c51-be506e4cc59d"</span><span class="w">
        </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>Use <code class="prettyprint">https://api.bws.ninja/v1/fetch</code> to get a previously started Smart Contract call, indicating the <code class="prettyprint">jobId</code> you get when running the <a href="#call-operation">‘call’</a>:</p>

<table><thead>
<tr>
<th>Parameter</th>
<th>Type</th>
<th>Value(s)</th>
</tr>
</thead><tbody>
<tr>
<td>jobId</td>
<td>string</td>
<td>The jobId you get when running a Smart Contract</td>
</tr>
</tbody></table>

<h3 id="fetch-results">&lsquo;fetch&rsquo; Results</h3>

<p>The <strong>fetch</strong> API method will return the status of your Smart Contract call as part of the info parameter:</p>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>Status</td>
<td>The current status of Smart Contract execution</td>
</tr>
<tr>
<td>TimestampInMillis</td>
<td>The status timestamp in milliseconds</td>
</tr>
<tr>
<td>Request</td>
<td>The original request you did to call the Smart Contract</td>
</tr>
<tr>
<td>Result</td>
<td>When Status is &lsquo;completed&rsquo; the smart contract results</td>
</tr>
<tr>
<td>Receipt</td>
<td>The outcome of interaction with Ethereum Blockchain</td>
</tr>
<tr>
<td>txnUrl</td>
<td>Blockchain network scanner website for your transaction</td>
</tr>
<tr>
<td>proofOfRegistryUrl</td>
<td>Blockchain Web Services <a href="#proof-of-registry">Proof of Registry</a> Url</td>
</tr>
</tbody></table>

<h4 id="fetch-status-list">&lsquo;fetch&rsquo; Status List</h4>

<p>A Blockchain Web Services Smart Contract call status can be:</p>

<table><thead>
<tr>
<th>Status</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>registered</td>
<td>The job has correctly been registered for execution</td>
</tr>
<tr>
<td>running</td>
<td>The transaction is running on Blockchain Network</td>
</tr>
<tr>
<td>completed</td>
<td>Smart Contract call has completed</td>
</tr>
<tr>
<td>failed</td>
<td>Smart Contract execution has failed</td>
</tr>
</tbody></table>
